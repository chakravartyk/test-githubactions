name: test-github-actions
run-name: Test Run
on:
  push:
    paths:
    - folder/**
jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: pre-commit scan
      shell: bash
      run: |
        set -xe
        environments=$(git diff -r --name-only origin/main...HEAD | grep -E ^infrastructure-template/environments/ | xargs dirname)
        echo "$environments"
        for env in "$environments"; do if [ $(ls -A "$env")]; then echo $env; fi; done
      continue-on-error: true

    # - name: Set up Python 3.8
    #   uses: actions/setup-python@v1
    #   with:
    #     python-version: 3.8


    # - name: install boilerplate
    #   run: |
    #     sudo curl -Ls https://${{ secrets.OAUTH_GITHUB_KEY }}@raw.githubusercontent.com/gruntwork-io/gruntwork-installer/"$GRUNTWORK_INSTALLER_VERSION"/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version "$GRUNTWORK_INSTALLER_VERSION"
    #     gruntwork-install --binary-name 'terragrunt' --repo 'https://github.com/gruntwork-io/terragrunt' --tag "$TERRAGRUNT_VERSION" --no-sudo true
    #     gruntwork-install --binary-name 'boilerplate' --repo 'https://github.com/gruntwork-io/boilerplate' --tag "$BOILERPLATE_VERSION" --no-sudo true
    #   env:
    #     GRUNTWORK_INSTALLER_VERSION: v0.0.38
    #     TERRAGRUNT_VERSION: v0.40.2
    #     BOILERPLATE_VERSION: v0.5.3
    #     GITHUB_OAUTH_TOKEN: ${{ secrets.OAUTH_GITHUB_KEY }}

    # - name: verify installation
    #   run: |
    #     terragrunt -v
    #     boilerplate -v
    #     terraform -v

    # - name: Generate boilerplate template
    #   run: boilerplate --template-url ./infrastructure-template/blueprints --output-folder .  --non-interactive --var-file $CONFIG_PATH
    #   env:
    #     CONFIG_PATH: infrastructure-template/environments/scadev/*

    # - name: pre-commit scan
    #   run: |
    #     echo ${{ GITHUB_REF_NAME }}
    #     git diff --name-only --no-pager main...${{ GITHUB_REF_NAME }}
    #   continue-on-error: true

    # - name: checkout gruntwork
    #   uses: actions/checkout@v3
    #   with:
    #     repository: gruntwork-io/gruntwork-installer
    #     token: ${{ secrets.OAUTH_GITHUB_KEY }}

    # - uses: stefanzweifel/git-auto-commit-action@v4
    #   with:
    #     commit_message: Generate bp template

    # - uses: stefanzweifel/git-auto-commit-action@v4
    #   with:
    #     commit_message: fix lint

    # - name: Linting
    #   uses: pre-commit-ci/lite-action@v1.0.0
    #   if: always()
