name: Boilerplate workflow
run-name: Generate boilerplate argocd-ska config

on:
  push:

jobs:
  Generate-Boilerplate:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install Boilerplate
      uses: chakravartyk/GHA-boilerplate@v1
      with:
        GRUNTWORK_INSTALLER_VERSION: v0.0.38
        BOILERPLATE_VERSION: v0.5.3
        GITHUB_OAUTH_TOKEN: ${{ secrets.OAUTH_GITHUB_KEY }}

    - name: Verify Installation
      run: |
        set -e
        boilerplate -v

    # - name: Generate Boilerplate Template
    #   shell: bash
    #   run: |
    #     set -xeo pipefail
    #     environments=$(git diff -r --name-only origin/main...HEAD | grep -E ^infrastructure-template/environments/ | xargs dirname | sort -u)
    #     for env in $environments; do if [ $(ls $env) ]; then boilerplate --template-url ./infrastructure-template/blueprints --output-folder .  --non-interactive --var-file $env/* ; fi; done

    # - name: Push Boilerplate Output
    #   uses: stefanzweifel/git-auto-commit-action@v4
    #   with:
    #     commit_message: Generated boilerplate output

    # - name: Run Linting Checks
    #   run: |
    #     pip install pre-commit
    #     pre-commit run --from-ref origin/main --to-ref HEAD --verbose
    #   continue-on-error: true

    # - name: Push Lint Fix
    #   uses: stefanzweifel/git-auto-commit-action@v4
    #   with:
    #     commit_message: Fixed lint for boilerplate output
